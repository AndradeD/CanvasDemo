
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Canvas Demo </title>
   
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css"
        integrity="sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk" crossorigin="anonymous">
 
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/js/bootstrap.bundle.min.js" integrity="sha384-p34f1UUtsS3wqzfto5wAAmdvj+osOnFyQFpp4Ua3gs/ZVWx6oOypYoCJhGGScy+8" crossorigin="anonymous"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/jsforce/1.9.1/jsforce.min.js"></script>
    <link href="jsonTree.css" rel="stylesheet" />
    <link href="index.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-wEmeIV1mKuiNpC+IOBjI7aAzPcEZeedi5yW5f2yOq55WWLwNGmvvx4Um1vskeMj0" crossorigin="anonymous">
    <script src="jsonTree.js"></script>

</head>

<body>
    <!--<div class="container-fluid">-->
        <!-- Navigation -->
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark fixed-top">
        <div class="container">
            <div id="img-logo">
                <img src="https://api.media.atlassian.com/file/0cd1ccf8-7dc7-419a-b88a-6e9dafd4d50e/binary?token=eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiIxMTM4OTI0Zi03ZGUxLTRkYjItYjRmNi03MzIzMmNkYzFjOTUiLCJhY2Nlc3MiOnsidXJuOmZpbGVzdG9yZTpmaWxlOjBjZDFjY2Y4LTdkYzctNDE5YS1iODhhLTZlOWRhZmQ0ZDUwZSI6WyJyZWFkIl19LCJleHAiOjE2MjA5MjM2MjcsIm5iZiI6MTYyMDg0MDY0N30.V5Hm457FpaKiSZqr_rhAvZd1g5wf8jPPcM5Bx1TcxXc&client=1138924f-7de1-4db2-b4f6-73232cdc1c95&name=atl.site.logo&max-age=2940" alt="logo">
            </div>
            <a class="navbar-brand">Sistema Legado</a>
            <button class="navbar-toggler" type="button" onclick="clickShowMenu()" data-toggle="collapse" data-target="#navbarResponsive" aria-controls="navbarResponsive" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
            </button>
            <div class="navbar-collapse hidden" id="navbarResponsive">
                <ul class="navbar-nav ml-auto">
                <li class="nav-item active">
                    <a class="nav-link" onclick="goHome()" href="#">Home
                        <span class="sr-only">(current)</span>
                        </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" onclick="removeHiddenCriacao()" href="#">Create</a>
                </li>
                <li class="nav-item hidden">
                    <a class="nav-link" onclick="removeHiddenEdit()" id="edit-button" href="#">Update</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" onclick="removeHiddenList()" href="#">List</a>
                </li>
                </ul>
                <span id="mensagem-usuario">Usuário Salesforce: Fora do Salesforce</span>
            </div>
        </div>
    </nav>
    <div id="body-main">
        <div id="criacao_case" class="hidden">
            <h1>Case Creation</h1>
            <span>Status</span>
            <select id="status-case" name="Status">
                <option value="New">New</option>
                <option value="Working">Working</option>
                <option value="Escalated">Escalated</option>
                <option value="Closed">Closed</option>
              </select>
            <span>Subject</span>
            <input type="text" placeholder="Subject" id="subject-case" />
            <span>Description</span>
            <input type="text" placeholder="Description" id="description-case" />
            <button onclick="createCase()" class="button">Create</button>
        </div>

        <div id="edicao_case" class="hidden">
            <p>Priority Edit</p>
            <span id="cliente-case"></span>
            <input type="text" placeholder="Priority" id="priorityCase" />
            <button onclick="editCase()" class="button">Edit</button>
        </div>

        <div id="list_cases" class="hidden">
            <h3>Lista de Cases Criadas</h3>
            <table id="table-case">
                <thead>
                    <tr>
                        <th>Status</th>
                        <th>Subject</th>
                        <th>Description</th>
                    </tr>
                </thead>
                <tbody id="tbody-list">
                </tbody>
            </table>

        </div>
        <div id="homePage-image">
            <img src="https://dsim.in/blog/wp-content/uploads/2017/03/feature-3.jpg" alt="homePage">
        </div>

    </div>
     
        <p>
            <div id="reqCode">

            </div>
        </p>

    <!--</div>-->  
    <script>
        let casesStr = "<%= casesFromServer %>" ; 
        var decodedCases = casesStr.split('&#34;').join('"')  ;
        var cases = [];

        let req = "<%= req %>"  ; 
        var decodedString = req.split('&#34;').join('"')  ;  
        console.log('decodedString:'+decodedString);
        var wrapper = document.getElementById("reqCode");
        // or from a string by JSON.parse(str) method
        var dataStr = decodedString;
        var data, conn, instanceUrl, recordId = null;

        try {
            data = JSON.parse(dataStr);
            conn = new jsforce.Connection({ 
                signedRequest: data
            });
            instanceUrl = data.client.instanceUrl;
            recordId = data.context.environment.record.Id;

            conn.instanceUrl = instanceUrl;
            var clientName = "";
            callStartCases();
            debugger;
            if (data != undefined) {
                document.getElementById('edit-button').parentElement.classList.remove('hidden');
                document.getElementById('mensagem-usuario').textContent = "Usuário Salesforce: " + data.context.user.fullName;
                document.getElementById('cliente-case').textContent = "Cliente: " + clientName;
            }
        } catch (e) {}

        async function callStartCases() {
            cases = await retrieveCases();
            clientName = await getClientNameById(data.context.environment.record.ContactId); 
            if (cases == []) {
                cases = JSON.parse(decodedCases);
            }
            //refreshCases();
        }

        async function getClientNameById(clientId) {
            var clientName = "";
            conn.query("SELECT Name FROM Contact WHERE ID = '" + clientId + "'").then(function(err, result) {
                if (err) { return console.error(err); }
                clientName = result.records;
            });         
            return clientName;      
        }

        function refreshCases() {
            document.getElementById('tbody-list').innerHTML = "";
            for(var i=0; i<cases.length;i++) {
                var table = document.getElementById( 'tbody-list' );
                var row = table.insertRow(i),
                    cell1 = row.insertCell(0),
                    cell2 = row.insertCell(1),
                    cell3 = row.insertCell(2);
    
                cell1.innerHTML = cases[i].Status;
                cell2.innerHTML = cases[i].Subject;
                cell3.innerHTML = cases[i].Description;
            }
        }

        function createCase() {
            var status = document.getElementById('status-case').value;
            var subject = document.getElementById('subject-case').value;
            var description = document.getElementById('description-case').value;
            var newCase = null;

            if (data != undefined) {
                newCase = { 
                    Status: status,
                    Subject: subject,
                    Description: description,
                    AccountId: data.context.environment.record.AccountId
                }
                conn.sobject("Case").create(newCase, function(err, ret) {
                if (err || !ret.success) { return console.error(err, ret); }
                    alert('Created Successfully : ' + ret.id + ", please go to Cases Page.");
                });
            } else {
                newCase = { 
                    Status: status,
                    Subject: subject,
                    Description: description,
                    AccountId: null
                }
                alert('Case created');
            }
            cases.push(newCase);
            document.getElementById('status-case').value = "";
            document.getElementById('subject-case').value = "";
            document.getElementById('description-case').value = "";
            refreshCases();
        }

        function retrieveCases() {
            if (data != undefined) {
                conn.query("SELECT Status, Subject, Description FROM Case ORDER BY CreatedDate", function(err, result) {
                  if (err) { return console.error(err); }
                  cases = result.records;
                });
            }
            return cases;
        }

        function editCase() {
            var priority = document.getElementById('priorityCase').value;
            
            conn.sobject("Case").update({ 
                Id : recordId,
                Priority : priority
            }, function(err, ret) {
            if (err || !ret.success) { return console.error(err, ret); }
                alert('Updated Successfully : ' + ret.id + ", please refresh your page.");
            });
        }

        function removeHiddenCriacao() {
            document.getElementById('criacao_case').classList.remove('hidden');
            document.getElementById('criacao_case').classList.add('inlineGrid');
            document.getElementById('edicao_case').classList.add('hidden');
            document.getElementById('list_cases').classList.add('hidden');
            document.getElementById('homePage-image').classList.add('hidden');
        }

        function removeHiddenList() {
            refreshCases();
            document.getElementById('list_cases').classList.remove('hidden');
            document.getElementById('edicao_case').classList.add('hidden');
            document.getElementById('criacao_case').classList.add('hidden');
            document.getElementById('criacao_case').classList.remove('inlineGrid');
            document.getElementById('homePage-image').classList.add('hidden');
            document.getElementById('edicao_case').classList.remove('inlineGrid');
        }

        function removeHiddenEdit() {
            document.getElementById('edicao_case').classList.remove('hidden');
            document.getElementById('edicao_case').classList.add('inlineGrid');
            document.getElementById('list_cases').classList.add('hidden');
            document.getElementById('criacao_case').classList.add('hidden');
            document.getElementById('criacao_case').classList.remove('inlineGrid');
            document.getElementById('homePage-image').classList.add('hidden');
        }
        
        function goHome() {
            document.getElementById('edicao_case').classList.add('hidden');
            document.getElementById('list_cases').classList.add('hidden');
            document.getElementById('criacao_case').classList.add('hidden');
            document.getElementById('criacao_case').classList.remove('inlineGrid');
            document.getElementById('homePage-image').classList.remove('hidden');
            document.getElementById('edicao_case').classList.remove('inlineGrid');
        }

        function clickShowMenu() {
            if (document.getElementById('navbarResponsive').classList.contains('hidden')) {
                document.getElementById('navbarResponsive').classList.remove('hidden');
            } else {
                document.getElementById('navbarResponsive').classList.add('hidden');
            }
            
        }

        // Create json-tree
        //var tree = jsonTree.create(data, wrapper);  
    </script>
</body> 
</html>

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Canvas Demo </title>
   
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css"
        integrity="sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk" crossorigin="anonymous">
 
    <script src="//cdnjs.cloudflare.com/ajax/libs/jsforce/1.9.1/jsforce.min.js"></script>
    <link href="jsonTree.css" rel="stylesheet" />
    <link href="index.css" rel="stylesheet" />
    <script src="jsonTree.js"></script>

</head>

<body>
    <div class="container-fluid">
 
        <!--<div class="jumbotron">
            <h1 class="display-4"> Canvas App Workinga as Expected, Few Observations </h1>
            <p class="lead">
                <ul>
                    <li> OAuth setting needed in Connected App for scope but no use of Callback URL.  </li>
                    <li>  Users must be preapproved for signed request, otherwise OAuth flow would be needed. </li> 
                </ul> 
            </p> 
        </div> -->

        <div class="red-container">
            <h1>Sistema Legado</h1>
        </div>

        <div class="button-container">
            <button type="button" class="button" onclick="removeHiddenCriacao()">Criar Case</button>
            <button type="button" class="button" onclick="removeHiddenEdit()" >Alterar a Case</button>
            <button type="button" class="button" onclick="removeHiddenList()" >Mostrar Cases</button>
        </div>
        
        <div id="criacao_case" class="hidden">
            <h1>Case Creation</h1>
            <span>Status</span>
            <select id="status-case" name="Status">
                <option value="New">New</option>
                <option value="Working">Working</option>
                <option value="Escalated">Escalated</option>
                <option value="Closed">Closed</option>
              </select>
            <span>Subject</span>
            <input type="text" placeholder="Subject" id="subject-case" />
            <span>Description</span>
            <input type="text" placeholder="Description" id="description-case" />
            <button onclick="createCase()" class="button">Create</button>
        </div>

        <div id="edicao_case" class="hidden">
            <p>Priority Edit</p>
            <input type="text" placeholder="Priority" id="priorityCase" />
            <button onclick="editCase()" class="button">Edit</button>
        </div>

        <div id="list_cases" class="hidden">
            <h3>Lista de Cases Criadas</h3>
            <table id="table-case">
                <thead>
                    <tr>
                        <th>Status</th>
                        <th>Subject</th>
                        <th>Description</th>
                    </tr>
                </thead>
                <tbody id="tbody-list">
                </tbody>
            </table>

        </div>
     
        <p>
            <div id="reqCode">

            </div>
        </p>

    </div>  
    <script>
        let casesStr = "<%= casesFromServer %>" ; 
        var decodedCases = casesStr.split('&#34;').join('"')  ;
        var cases = [];

        let req = "<%= req %>"  ; 
        var decodedString = req.split('&#34;').join('"')  ;  
        console.log('decodedString:'+decodedString);
        var wrapper = document.getElementById("reqCode");
        // or from a string by JSON.parse(str) method
        var dataStr = decodedString;
        var data, conn, instanceUrl, recordId = null;

        try {
            data = JSON.parse(dataStr);
            conn = new jsforce.Connection({ 
                signedRequest: data
            });
            instanceUrl = data.client.instanceUrl;
            recordId = data.context.environment.record.Id;

            conn.instanceUrl = instanceUrl;

            cases = retrieveCases();
            if (cases == []) {
                cases = JSON.parse(decodedCases);
            }
            refreshCases();
        } catch (e) {}


        function refreshCases() {
            document.getElementById('tbody-list').innerHTML = "";
            for(var i=0; i<cases.length;i++) {
                var table = document.getElementById( 'tbody-list' );
                var row = table.insertRow(i),
                    cell1 = row.insertCell(0),
                    cell2 = row.insertCell(1),
                    cell3 = row.insertCell(2);
    
                cell1.innerHTML = cases[i].Status;
                cell2.innerHTML = cases[i].Subject;
                cell3.innerHTML = cases[i].Description;
            }
        }

        function createCase() {
            var status = document.getElementById('status-case').value;
            var subject = document.getElementById('subject-case').value;
            var description = document.getElementById('description-case').value;
            var newCase = null;

            if (data != undefined) {
                newCase = { 
                    Status: status,
                    Subject: subject,
                    Description: description,
                    AccountId: data.context.environment.record.AccountId
                }
                conn.sobject("Case").create(newCase, function(err, ret) {
                if (err || !ret.success) { return console.error(err, ret); }
                    alert('Created Successfully : ' + ret.id + ", please go to Cases Page.");
                });
            } else {
                newCase = { 
                    Status: status,
                    Subject: subject,
                    Description: description,
                    AccountId: null
                }
                alert('Case created');
            }
            cases.push(newCase);
            document.getElementById('status-case').value = "";
            document.getElementById('subject-case').value = "";
            document.getElementById('description-case').value = "";
            refreshCases();
        }

        function retrieveCases() {
            if (data != undefined) {
                conn.query("SELECT Status, Subject, Description FROM Case", function(err, result) {
                  if (err) { return console.error(err); }
                  cases = result.records;
                });                
            }
            return cases;
        }

        function editCase() {
            var priority = document.getElementById('priorityCase').value;
            
            conn.sobject("Case").update({ 
                Id : recordId,
                Priority : priority
            }, function(err, ret) {
            if (err || !ret.success) { return console.error(err, ret); }
                alert('Updated Successfully : ' + ret.id + ", please refresh your page.");
            });
        }

        function removeHiddenCriacao() {
            document.getElementById('criacao_case').classList.remove('hidden');
            document.getElementById('criacao_case').classList.add('inlineGrid');
            document.getElementById('edicao_case').classList.add('hidden');
            document.getElementById('list_cases').classList.add('hidden');
        }

        function removeHiddenList() {
            document.getElementById('list_cases').classList.remove('hidden');
            document.getElementById('edicao_case').classList.add('hidden');
            document.getElementById('criacao_case').classList.add('hidden');
            document.getElementById('criacao_case').classList.remove('inlineGrid');
        }

        function removeHiddenEdit() {
            document.getElementById('edicao_case').classList.remove('hidden');
            document.getElementById('list_cases').classList.add('hidden');
            document.getElementById('criacao_case').classList.add('hidden');
            document.getElementById('criacao_case').classList.remove('inlineGrid');
        }

        // Create json-tree
        //var tree = jsonTree.create(data, wrapper);  
    </script>
</body> 
</html>